; nvt.mdp - GPU-optimized NVT equilibration
; Temperature equilibration with GPU optimization

title       = GPU-Optimized NVT Equilibration

; Run parameters
integrator  = md        ; leap-frog integrator
nsteps      = 50000     ; 100 ps
dt          = 0.002     ; 2 fs

; Output control (minimal for GPU efficiency)
nstxout     = 0         ; don't save coordinates 
nstvout     = 0         ; don't save velocities
nstfout     = 0         ; don't save forces
nstenergy   = 1000      ; save energies every 2 ps
nstlog      = 1000      ; update log file every 2 ps
nstxout-compressed = 1000 ; save coordinates every 2 ps

; Bond parameters (GPU-optimized)
continuation        = no        ; first dynamics run
constraint_algorithm = lincs   ; holonomic constraints 
constraints         = h-bonds  ; CRITICAL: only H-bonds for GPU efficiency
lincs_iter          = 1        ; accuracy of LINCS
lincs_order         = 4        ; also related to accuracy

; Neighbor searching (GPU-optimized)
cutoff-scheme   = Verlet    ; Buffered neighbor searching
ns_type         = grid      ; search neighboring grid cells
nstlist         = 200       ; 400 fs - optimal for GPU
rcoulomb        = 1.0       ; short-range electrostatic cutoff
rvdw            = 1.0       ; short-range van der Waals cutoff
verlet-buffer-tolerance = 0.005

; Electrostatics
coulombtype     = PME       ; Particle Mesh Ewald
pme_order       = 4         ; cubic interpolation
fourierspacing  = 0.16      ; grid spacing for FFT

; Temperature coupling (GPU-optimized)
tcoupl      = V-rescale     ; modified Berendsen thermostat
tc-grps     = Protein Non-Protein ; coupling groups
tau_t       = 1.0     1.0   ; time constant
ref_t       = 300     300   ; reference temperature in K
nsttcouple  = 100           ; frequency (>=100 steps for GPU efficiency)

; Pressure coupling OFF during NVT
pcoupl      = no            ; no pressure coupling in NVT

; Periodic boundary conditions
pbc         = xyz           ; 3-D PBC

; Dispersion correction
DispCorr    = EnerPres      ; account for cut-off vdW scheme

; Velocity generation
gen_vel     = yes           ; assign velocities from Maxwell distribution
gen_temp    = 300           ; temperature for Maxwell distribution
gen_seed    = -1            ; generate a random seed

; COM motion removal
nstcomm         = 1000      ; frequency for COM removal
comm-mode       = Linear    ; remove center of mass translation
comm-grps       = System    ; groups for COM removal

; Energy calculation (GPU-optimized)
nstcalcenergy = 1000        ; every 2 ps for GPU efficiency
